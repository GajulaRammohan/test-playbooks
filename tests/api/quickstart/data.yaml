---
license:
    company_name: Ansible, Inc
    contact_name: Art Vandelay
    contact_email: art@ansible.com
    instance_count: 1000
    license_days: 31

organizations:
    - name: Bender Products
      description: Bender Products, Ltd.
      users:
        - bender_eng_user
        - bender_it_user
      admins:
        - bender_admin
      projects:
        - ansible-examples.git (manual)
        - ansible-examples.svn (manual)
        - ansible-helloworld.hg (manual)
        - ansible-examples.git (git)
        - ansible-examples.svn (svn)
        - ansible-helloworld (hg)
        - ansible-helloworld (hg, ssh_key_data)
        - ansible-helloworld (hg, ssh_key_data, ssh_key_unlock)
        - ansible-examples.git (github, ssh_key_data)
        - ansible-examples.git (github, ssh_key_data, ssh_key_unlock)

    - name: Ansible, Inc
      description: Ansible is the simplest way to automate IT.
      users:
        - ansible_user
      admins:
        - ansible_admin
      projects:
        - ansible-playbooks.git (github, ssh_key_data)

    - name: Fedora
      description: The Fedora Project

users:
    - username: anonymous
      email: anonymous@example.com
      password: password
      first_name: Anonymous
      last_name: User
      is_superuser: False

    - username: bender_eng_user
      email: bender_eng_user@bender.com
      password: password
      first_name: Bender Engineering
      last_name: User
      is_superuser: False

    - username: bender_it_user
      email: bender_it_user@bender.com
      password: password
      first_name: Bender IT
      last_name: User
      is_superuser: False

    - username: bender_admin
      email: bender_admin@bender.com
      password: password
      first_name: Bender
      last_name: Admin
      is_superuser: False

    - username: ansible_user
      email: ansible_user@ansible.com
      password: password
      first_name: Bender
      last_name: User1
      is_superuser: False

    - username: ansible_admin
      email: ansible_admin@ansible.com
      password: password
      first_name: Bender
      last_name: Admin
      is_superuser: False

teams:
    - name: IT
      description: IT Department
      organization: Bender Products
      users:
        - bender_it_user
    - name: Engineering
      description: Engineering Department
      organization: Bender Products
      users:
        - bender_eng_user

credentials:
    - name: SSH (user:bender_eng_user, password:ASK)
      description: user:bender_eng_user, ssh_user:root, password:ASK
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:bender_eng_user, password:***)
      description: user:bender_eng_user, ssh_user:root, password:***
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}' # merged from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:bender_eng_user, ssh_key_data)
      description: user:bender_eng_user, ssh_user:root, ssh_key_data
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}' # from credentials.yaml
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:ASK)
      description: user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:ASK
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: 'ASK'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***)
      description: user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:***
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***, vault_password:***)
      description: user:bender_eng_user, ssh_user:root, ssh_key_data, ssh_key_unlock:***, vault_password:***
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: ''
      sudo_password: ''
      vault_password: '{vault_password}'

    - name: SSH (user:bender_eng_user, sudo_password:ASK)
      description: user:bender_eng_user, ssh_user:root, sudo_password:ASK
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: 'ASK'

    - name: SSH (user:bender_eng_user, sudo_password:***)
      description: user:bender_eng_user, ssh_user:root, sudo_password:***
      kind: ssh
      user: bender_eng_user
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: '{sudo_password}'

    #
    # github credentials
    #
    - name: git@github.com (ssh_key_data)
      description: 'SCM credential for git@github.com (includes ssh_key_data)'
      kind: scm
      user: bender_eng_user
      team: null
      cloud: false
      username: git
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: ''

    - name: git@github.com (ssh_key_data, ssh_key_unlock)
      description: 'SCM credential for git@github.com (includes ssh_key_data and ssh_key_unlock)'
      kind: scm
      user: bender_eng_user
      team: null
      cloud: false
      username: git
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'

    #
    # bitbucket credentials
    #
    - name: hg@bitbucket.org (ssh_key_data)
      description: 'SCM credential for git@github.com (includes ssh_key_data)'
      kind: scm
      user: bender_eng_user
      team: null
      cloud: false
      username: hg
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: ''

    - name: hg@bitbucket.org (ssh_key_data, ssh_key_unlock)
      description: 'SCM credential for git@github.com (includes ssh_key_data and ssh_key_unlock)'
      kind: scm
      user: bender_eng_user
      team: null
      cloud: false
      username: hg
      password: ''
      ssh_key_data: '{encrypted[ssh_key_data]}'
      ssh_key_unlock: '{encrypted[ssh_key_unlock]}'

    #
    # Amazon AWS Credentials
    #
    - name: AWS (user:bender_eng_user)
      description: Amazon AWS credentials for bender_eng_user
      kind: aws
      user: bender_eng_user
      team: null
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    - name: AWS (team:IT)
      description: Amazon AWS credentials for bender_eng_user
      kind: aws
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    #
    # Rackspace Cloud Credentials
    #
    - name: Rackspace (user:bender_eng_user)
      description: Rackspace Cloudserver credentials for bender_eng_user
      kind: rax
      user: bender_eng_user
      team: null
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    - name: Rackspace (team:IT)
      description: Rackspace Cloudserver credentials for bender_eng_user
      kind: rax
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    #
    # Microsoft Azure Cloud Credential
    #
    - name: Microsoft Azure (team:IT)
      description: Microsoft Azure for team:IT
      kind: azure
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      ssh_key_data: '{ssh_key_data}' # Gathered from credentials.yaml

    #
    # Google Compute Credential
    #
    - name: Google Compute (team:IT)
      description: Google Compute for team:IT
      kind: gce
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      project: '{project}'   # Gathered from credentials.yaml
      ssh_key_data: '{ssh_key_data}' # Gathered from credentials.yaml

    #
    # VMware vCenter Credential
    #
    - name: VMware vCenter (team:IT)
      description: VMware vCenter (team:IT)
      kind: vmware
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml
      host: '{host}'         # Gathered from credentials.yaml

inventories:
    - name: all_inventory
      description: Inventory tracking internal systems
      organization: Bender Products

    - name: ansibleworks-it
      organization: Ansible, Inc

    - name: inventory-aws
      organization: Ansible, Inc

    - name: inventory-rax
      organization: Ansible, Inc

    - name: inventory-gce
      organization: Ansible, Inc

    - name: inventory-azure
      organization: Ansible, Inc

    - name: inventory-vmware
      organization: Ansible, Inc

    - name: local,
      organization: Ansible, Inc

groups:
    - name: local
      description: A group for systems that map to localhost
      inventory: all_inventory
      variables:
        ansible_connection: local

    - name: local_1-10
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local

    - name: local_11-20
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local

    - name: local_11-15
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_11-20

    - name: local_16-20
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_11-20

    - name: local_16
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_16-20

    - name: local_17
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_16-20

    - name: local_18
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_16-20

    - name: local_19
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_16-20

    - name: local_20
      description: A sub-group for systems that map to localhost
      inventory: all_inventory
      parent: local_16-20

    - name: cloud
      description: Group for dynamic cloud-based inventory
      inventory: all_inventory

    - name: aws
      description: Group for tracking Amazon EC2 instances
      inventory: all_inventory
      parent: cloud

    - name: rax
      description: Group for tracking Rackspace mycloud servers
      inventory: all_inventory
      parent: cloud

    - name: gce
      description: Group for tracking Google Compute servers
      inventory: all_inventory
      parent: cloud

    - name: azure
      description: Group for tracking Microsoft Azure servers
      inventory: all_inventory
      parent: cloud

    - name: Amazon EC2 Instances
      inventory: inventory-aws

    - name: Rackspace Cloud Servers
      inventory: inventory-rax

    - name: Google Compute Engine
      inventory: inventory-gce

    - name: Microsoft Azure
      inventory: inventory-azure

    - name: VMware vCenter
      inventory: inventory-vmware

inventory_sources:
    - name: all_inventory/aws # name is used for internal purposes
      group: aws
      inventory: all_inventory
      source: ec2
      credential: AWS (user:bender_eng_user)
      source_vars: ''
      source_regions: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: true
      update_interval: 0

    - name: all_inventory/rax # name is used for internal purposes
      group: rax
      inventory: all_inventory
      source: rax
      credential: Rackspace (user:bender_eng_user)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: 'ORD'
      source_tags: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: true
      update_interval: 0

    - name: all_inventory/gce # name is used for internal purposes
      group: gce
      inventory: all_inventory
      source: gce
      credential: Google Compute (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: true
      update_interval: 0

    - name: all_inventory/azure # name is used for internal purposes
      group: azure
      inventory: all_inventory
      source: azure
      credential: Microsoft Azure (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: true
      update_interval: 0

    - name: inventory-aws # name is used for internal purposes
      group: Amazon EC2 Instances
      inventory: inventory-aws
      source: ec2
      credential: AWS (team:IT)
      source_vars: ''
      source_regions: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: false
      update_interval: 0

    - name: inventory-rax # name is used for internal purposes
      group: Rackspace Cloud Servers
      inventory: inventory-rax
      source: rax
      credential: Rackspace (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: 'ORD'
      source_tags: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: false
      update_interval: 0

    - name: inventory-gce # name is used for internal purposes
      group: Google Compute Engine
      inventory: inventory-gce
      source: gce
      credential: Google Compute (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: false
      overwrite_vars: false
      update_on_launch: false
      update_interval: 0

    - name: inventory-azure # name is used for internal purposes
      group: Microsoft Azure
      inventory: inventory-azure
      source: azure
      credential: Microsoft Azure (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: false
      overwrite_vars: false
      update_on_launch: false
      update_interval: 0

    - name: inventory-vmware # name is used for internal purposes
      group: VMware vCenter
      inventory: inventory-vmware
      source: vmware
      credential: VMware vCenter (team:IT)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: false
      overwrite_vars: false
      update_on_launch: false
      update_interval: 0

hosts:
    - name: 127.0.0.1
      description: localhost (ip address)
      inventory: all_inventory
      groups:
        - local

    - name: localhost
      description: localhost (hostname)
      inventory: all_inventory
      groups:
        - local

    - name: unresolvable-name.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_user: root
        ansible_ssh_host: 127.0.0.1
      groups:
        - local

    - name: not a valid hostname
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: localhost
      groups:
        - local

    - name: host-1.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-2.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-3.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-4.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-5.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-6.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-7.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-8.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-9.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-10.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_1-10

    - name: host-11.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_11-15

    - name: host-12.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_11-15

    - name: host-13.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_11-15

    - name: host-14.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_11-15

    - name: host-15.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_11-15

    - name: host-16.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_16-20
        - local_16

    - name: host-17.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_16-20
        - local_17

    - name: host-18.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_16-20
        - local_18

    - name: host-19.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_16-20
        - local_19

    - name: host-20.example.com
      description: localhost (ansible_ssh_host)
      inventory: all_inventory
      variables:
        ansible_ssh_host: 127.0.0.1
      groups:
        - local
        - local_11-20
        - local_16-20
        - local_20

    - name: local
      inventory: local,

projects:
    - name: ansible-examples.git (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: git
      scm_type: null # manual
      scm_url: https://github.com/ansible/ansible-examples.git
      local_path: ansible-examples.git.manual

    - name: ansible-examples.svn (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: subversion
      scm_type: null # manual
      scm_url: https://github.com/ansible/ansible-examples
      local_path: ansible-examples.svn.manual

    - name: ansible-helloworld.hg (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: hg
      scm_type: null # manual
      scm_url: https://bitbucket.org/jlaska/ansible-helloworld
      local_path: ansible-helloworld.hg.manual

    - name: ansible-examples.git (git)
      description: scm_type:git
      organization: Bender Products
      scm_type: git
      scm_url: https://github.com/ansible/ansible-examples.git
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-examples.svn (svn)
      description: scm_type:svn
      organization: Bender Products
      scm_type: svn
      scm_url: https://github.com/ansible/ansible-examples
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-helloworld (hg)
      description: scm_type:hg
      organization: Bender Products
      scm_type: hg
      scm_url: https://bitbucket.org/jlaska/ansible-helloworld
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-helloworld (hg, ssh_key_data)
      description: ssh://hg@bitbucket.org/jlaska/ansible-helloworld (ssh_key_data)
      organization: Bender Products
      scm_type: hg
      scm_url: ssh://hg@bitbucket.org/jlaska/ansible-helloworld
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: hg@bitbucket.org (ssh_key_data)

    - name: ansible-helloworld (hg, ssh_key_data, ssh_key_unlock)
      description: ssh://hg@bitbucket.org/jlaska/ansible-helloworld (ssh_key_data)
      organization: Bender Products
      scm_type: hg
      scm_url: ssh://hg@bitbucket.org/jlaska/ansible-helloworld
      scm_branch: ''
      scm_clean: true
      scm_delete_on_update: true
      scm_update_on_launch: false
      credential: hg@bitbucket.org (ssh_key_data, ssh_key_unlock)

    - name: ansible-examples.git (github, ssh_key_data)
      description: git@github.com:ansible/ansible-examples.git (ssh_key_data)
      organization: Bender Products
      scm_type: git
      scm_url: git@github.com:ansible/ansible-examples.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: git@github.com (ssh_key_data)

    - name: ansible-examples.git (github, ssh_key_data, ssh_key_unlock)
      description: git@github.com:ansible/ansible-examples.git (ssh_key_data, ssh_key_unlock)
      organization: Bender Products
      scm_type: git
      scm_url: git@github.com:ansible/ansible-examples.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: git@github.com (ssh_key_data, ssh_key_unlock)

    - name: ansible-commander.git (github, ssh_key_data)
      description: git@github.com:ansible/ansible-commander.git (ssh_key_data)
      organization: Ansible, Inc
      scm_type: git
      scm_url: git@github.com:ansible/ansible-commander.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: git@github.com (ssh_key_data)

    - name: ansible-playbooks.git (github, ssh_key_data)
      description: git@github.com:jlaska/ansible-playbooks.git (ssh_key_data)
      organization: Ansible, Inc
      scm_type: git
      scm_url: git@github.com:jlaska/ansible-playbooks.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: git@github.com (ssh_key_data)

job_templates:
    - name: language_features/loop_plugins.yml (limit:{inventory_hostname}:&cloud)
      job_type: check
      allow_callbacks: false
      playbook: language_features/loop_plugins.yml
      project: ansible-examples.git (manual)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***)
      limit: '{inventory_hostname}:&cloud'

    - name: language_features/loop_nested.yml (limit:host-1*:&local_1-10, ssh_key_unlock:ASK)
      job_type: run
      allow_callbacks: false
      playbook: language_features/loop_nested.yml
      project: ansible-examples.git (manual)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:ASK)
      limit: host-1*:&local_1-10

    - name: language_features/roletest.yml (limit:~host-1[3-7]+\.example\.com, sudo_password:ASK)
      job_type: check
      allow_callbacks: false
      playbook: trunk/language_features/roletest.yml
      project: ansible-examples.svn (manual)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, sudo_password:ASK)
      limit: ~host-1[3-7]+\.example\.com
      verbosity: 2

    - name: language_features/roletest.yml (limit:all:!cloud)
      job_type: run
      allow_callbacks: false
      playbook: trunk/language_features/environment.yml
      project: ansible-examples.svn (manual)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, sudo_password:***)
      limit: all:!cloud
      verbosity: 2
      forks: 50
      extra_vars:
        who_does_number_two_work_fork: one

    - name: helloworld/site.yml (limit:local)
      job_type: run
      project: ansible-helloworld.hg (manual)
      playbook: site.yml
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, password:***)
      limit: local
      verbosity: 1
      extra_vars:
        ansible_connection: local

    - name: helloworld/vault.yml (limit:local)
      job_type: run
      project: ansible-helloworld (hg, ssh_key_data)
      playbook: vault.yml
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, ssh_key_data, ssh_key_unlock:***, vault_password:***)
      limit: local

    - name: language_features/tags.yml (tags:foo, limit:unresolvable-name.example.com)
      job_type: check
      allow_callbacks: false
      playbook: language_features/tags.yml
      project: ansible-examples.git (github, ssh_key_data)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, password:***)
      job_tags: foo
      limit: unresolvable-name.example.com

    - name: language_features/tags.yml (tags:bar, limit:not a valid hostname)
      job_type: run
      allow_callbacks: false
      playbook: language_features/tags.yml
      project: ansible-examples.git (github, ssh_key_data, ssh_key_unlock)
      inventory: all_inventory
      credential: SSH (user:bender_eng_user, ssh_key_data)
      job_tags: bar
      limit: not a valid hostname

    - name: ansible-commander.git/setup/site.yml
      _launch: false
      job_type: run
      playbook: setup/site.yml
      project: ansible-commander.git (github, ssh_key_data)
      inventory: inventory-aws
      credential: SSH (user:bender_eng_user, ssh_key_data)
      limit: ansible-tower
      extra_vars:
        sudo: true
        sudo_user: root

    - name: ansible-helloworld.hg/dynamic_inventory.yml
      _launch: false
      job_type: run
      project: ansible-helloworld (hg, ssh_key_data)
      playbook: dynamic_inventory.yml
      inventory: local,
      credential: SSH (user:bender_eng_user, ssh_key_data)
      extra_vars:
        num_hosts: 100
        ansible_connection: local

schedules:
    - name: Update ansible-playbooks.git every 30 minutes
      _type: project
      description: Update every 30m with a COUNT=10
      unified_job_template: ansible-playbooks.git (github, ssh_key_data)
      enabled: true
      rrule: 'DTSTART:{dtstart}; RRULE:FREQ=MINUTELY;INTERVAL=30;COUNT=10'

    - name: Update inventory-aws every hour
      _type: inventory_source
      description: Update every hour with a COUNT=5
      unified_job_template: Amazon EC2 Instances (inventory-aws)
      enabled: true
      rrule: 'DTSTART:{dtstart}; RRULE:FREQ=HOURLY;INTERVAL=1;COUNT=5'

    - name: Update inventory-rax every day
      _type: inventory_source
      description: Update every day
      unified_job_template: Rackspace Cloud Servers (inventory-rax)
      enabled: true
      rrule: 'DTSTART:{dtstart}; RRULE:FREQ=DAILY;INTERVAL=1'
