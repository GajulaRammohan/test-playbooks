---
license:
    company_name: AnsibleWorks
    contact_name: Art Vandelay
    contact_email: art@ansibleworks.com
    instance_count: 1000
    license_days: 31

organizations:
    - name: Bender Products
      description: Bender Products, Ltd.
      users:
        - dsmith
    - name: AnsibleWorks
      description: Just another AnsibleWorks
      users:
        - dsmith
    - name: Fedora
      description: The Fedora Project

users:
    - username: dsmith
      password: password
      first_name: David
      last_name: Smith
      email: dsmith@example.com
      is_superuser: False

teams:
    - name: IT
      description: IT Department
      organization: Bender Products

credentials:
    - name: SSH (user:dsmith, password:ASK)
      description: user:dsmith, ssh_user:root, password:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:dsmith, password:***)
      description: user:dsmith, ssh_user:root, password:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}' # merged from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:dsmith, ssh_key_data)
      description: user:dsmith, ssh_user:root, ssh_key_data
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}' # from credentials.yaml
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:dsmith, ssh_key_data, ssh_key_unlock:ASK)
      description: user:dsmith, ssh_user:root, ssh_key_data, ssh_key_unlock:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: 'ASK'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:dsmith, ssh_key_data, ssh_key_unlock:***)
      description: user:dsmith, ssh_user:root, ssh_key_data, ssh_key_unlock:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (user:dsmith, sudo_password:ASK)
      description: user:dsmith, ssh_user:root, sudo_password:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: 'ASK'

    - name: SSH (user:dsmith, sudo_password:***)
      description: user:dsmith, ssh_user:root, sudo_password:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: '{sudo_password}'

    - name: SSH (team:IT, password:ASK)
      description: team:IT, ssh_user:root, password:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: 'ASK'
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (team:IT, password:***)
      description: team:IT, ssh_user:root, password:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}' # merged from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (team:IT, ssh_key_data)
      description: team:IT, ssh_user:root, ssh_key_data
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}' # from credentials.yaml
      ssh_key_unlock: ''
      sudo_username: ''
      sudo_password: ''

    - name: SSH (team:IT, ssh_key_data, ssh_key_unlock:ASK)
      description: team:IT, ssh_user:root, ssh_key_data, ssh_key_unlock:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: 'ASK'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (team:IT, ssh_key_data, ssh_key_unlock:***)
      description: team:IT, ssh_user:root, ssh_key_data, ssh_key_unlock:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: ''
      sudo_password: ''

    - name: SSH (team:IT, sudo_password:ASK)
      description: team:IT, ssh_user:root, sudo_password:ASK
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: 'ASK'

    - name: SSH (team:IT, sudo_password:***)
      description: team:IT, ssh_user:root, sudo_password:***
      kind: ssh
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # merged from credentials.yaml
      password: '{password}'
      ssh_key_data: '{ssh_key_data}'
      ssh_key_unlock: '{ssh_key_unlock}'
      sudo_username: '{sudo_username}'
      sudo_password: '{sudo_password}'

    - name: SCM (user:dsmith, username:git, password:ASK)
      description: 'SCM credential for use with URLs of the format: git@github.com'
      kind: scm
      user: dsmith
      team: null
      cloud: false
      username: git
      password: ASK
      ssh_key_data: ''
      ssh_key_unlock: ''

    - name: SCM (user:dsmith, username:***, password:***)
      description: 'SCM credential for use with URLs of the format: https://github.com'
      kind: scm
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml
      ssh_key_data: ''
      ssh_key_unlock: ''

    - name: SCM (user:dsmith, username:***, ssh_key_data)
      description: 'SCM credential for use with URLs of the format: https://github.com (username, ssh_key_data)'
      kind: scm
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # Gathered from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}' # from credentials.yaml
      ssh_key_unlock: ''

    - name: SCM (user:dsmith, username:***, ssh_key_data, ssh_key_unlock:***)
      description: 'SCM credential for use with URLs of the format: https://github.com (username, ssh_key_data, ssh_key_unlock)'
      kind: scm
      user: dsmith
      team: null
      cloud: false
      username: '{username}' # Gathered from credentials.yaml
      password: ''
      ssh_key_data: '{ssh_key_data}' # from credentials.yaml
      ssh_key_unlock: '{ssh_key_unlock}' # from credentials.yaml

    - name: AWS (user:dsmith)
      description: Amazon AWS credentials for dsmith
      kind: aws
      user: dsmith
      team: null
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    - name: AWS (team:IT)
      description: Amazon AWS credentials for dsmith
      kind: aws
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    - name: Rackspace (user:dsmith)
      description: Rackspace Cloudserver credentials for dsmith
      kind: rax
      user: dsmith
      team: null
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

    - name: Rackspace (team:IT)
      description: Rackspace Cloudserver credentials for dsmith
      kind: rax
      user: null
      team: IT
      cloud: true
      username: '{username}' # Gathered from credentials.yaml
      password: '{password}' # Gathered from credentials.yaml

inventories:
    - name: it_inventory
      description: Inventory tracking internal systems
      organization: Bender Products

groups:
    - name: local
      description: A group for systems that map to localhost
      inventory: it_inventory

    - name: aws
      description: Group for tracking Amazon EC2 instances
      inventory: it_inventory

    - name: rax
      description: Group for tracking Rackspace mycloud servers
      inventory: it_inventory

inventory_sources:
    - name: it_inventory/aws # name is used for internal purposes
      group: aws
      inventory: it_inventory
      source: ec2
      credential: AWS (user:dsmith)
      source_vars: ''
      source_regions: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: false
      update_interval: 0

    - name: it_inventory/rax # name is used for internal purposes
      group: rax
      inventory: it_inventory
      source: rax
      credential: Rackspace (user:dsmith)
      # source_username: # stored in credentials.yaml
      # source_password: # stored in credentials.yaml
      source_vars: ''
      source_regions: ''
      source_tags: ''
      overwrite: true
      overwrite_vars: true
      update_on_launch: false
      update_interval: 0

hosts:
    - name: 127.0.0.1
      description: localhost (ip address)
      inventory: it_inventory
      groups:
        - local

    - name: localhost
      description: localhost (hostname)
      inventory: it_inventory
      groups:
        - local

    - name: unresolvable-name.example.com
      description: localhost (ansible_ssh_host)
      inventory: it_inventory
      variables: |
        ansible_ssh_user: root
        ansible_ssh_host: 127.0.0.1
      groups:
        - local

projects:
    - name: ansible-examples.git (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: git
      scm_type: null # manual
      scm_url: https://github.com/ansible/ansible-examples.git
      local_path: ansible-examples.git.manual

    - name: ansible-examples.svn (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: subversion
      scm_type: null # manual
      scm_url: https://github.com/ansible/ansible-examples
      local_path: ansible-examples.svn.manual

    - name: ansible-helloworld.hg (manual)
      description: scm_type:manual
      organization: Bender Products
      _ansible_module: hg
      scm_type: null # manual
      scm_url: https://bitbucket.org/jlaska/ansible-helloworld
      local_path: ansible-helloworld.hg.manual

    - name: ansible-examples.git (git)
      description: scm_type:git
      organization: Bender Products
      scm_type: git
      scm_url: https://github.com/ansible/ansible-examples.git
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-examples.svn (svn)
      description: scm_type:svn
      organization: Bender Products
      scm_type: svn
      scm_url: https://github.com/ansible/ansible-examples
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-helloworld.hg (hg)
      description: scm_type:hg
      organization: Bender Products
      scm_type: hg
      scm_url: https://bitbucket.org/jlaska/ansible-helloworld
      scm_branch: ''
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false

    - name: ansible-examples.git (git, credential:ASK)
      description: scm_type:git, credential:ASK
      organization: Bender Products
      scm_type: git
      scm_url: git@github.com:ansible/ansible-examples.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: SCM (user:dsmith, username:git, password:ASK)

    - name: ansible-examples.git (git, credential:***)
      description: scm_type:git, credential:***
      organization: Bender Products
      scm_type: git
      scm_url: https://github.com/ansible/ansible-examples.git
      scm_branch: 'master'
      scm_clean: false
      scm_delete_on_update: false
      scm_update_on_launch: false
      credential: SCM (user:dsmith, username:***, password:***)

job_templates:
    - name: language_features/loop_plugins.yml (check)
      job_type: check
      allow_callbacks: false
      playbook: language_features/loop_plugins.yml
      project: ansible-examples.git (manual)
      inventory: it_inventory
      credential: SSH (user:dsmith, password:ASK)

    - name: language_features/loop_plugins.yml (run)
      job_type: run
      allow_callbacks: false
      playbook: language_features/loop_plugins.yml
      project: ansible-examples.git (manual)
      inventory: it_inventory
      credential: SSH (user:dsmith, password:ASK)

    - name: language_features/roletest.yml (check)
      job_type: check
      allow_callbacks: false
      playbook: trunk/language_features/roletest.yml
      project: ansible-examples.svn (manual)
      inventory: it_inventory
      credential: SSH (user:dsmith, password:ASK)

    - name: language_features/roletest.yml (run)
      job_type: run
      allow_callbacks: false
      playbook: trunk/language_features/roletest.yml
      project: ansible-examples.svn (manual)
      inventory: it_inventory
      credential: SSH (user:dsmith, password:ASK)

    - name: helloworld/site.yml
      job_type: run
      playbook: site.yml
      project: ansible-helloworld.hg (manual)
      inventory: it_inventory
      credential: SSH (user:dsmith, password:ASK)

# playbook: language_features/ansible_pull.yml
# playbook: language_features/register_logic.yml
# playbook: language_features/batch_size_control.yml
# playbook: language_features/file_secontext.yml
# playbook: language_features/loop_with_items.yml
# playbook: language_features/roletest2.yml
# playbook: language_features/complex_args.yml
# playbook: language_features/get_url.yml
# playbook: language_features/conditionals_part1.yml
# playbook: language_features/group_by.yml
# playbook: language_features/nested_playbooks.yml
# playbook: language_features/selective_file_sources.yml
# playbook: language_features/conditionals_part2.yml
# playbook: language_features/group_commands.yml
# playbook: language_features/tags.yml
# playbook: language_features/custom_filters.yml
# playbook: language_features/intermediate_example.yml
# playbook: language_features/upgraded_vars.yml
# playbook: language_features/delegation.yml
# playbook: language_features/intro_example.yml
# playbook: language_features/prompts.yml
# playbook: language_features/user_commands.yml
# playbook: language_features/environment.yml
# playbook: language_features/loop_nested.yml
