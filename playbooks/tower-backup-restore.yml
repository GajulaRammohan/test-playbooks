---
- name: create instance(s)
  hosts: local
  roles:
    - role: create_ec2
    - role: save_inventory
      my_inventory_file: '{{ inventory_dir }}/inventory.backup-restore'

- name: add authorized keys
  hosts: tower
  roles:
    - auth_keys

- name: group hosts by linux distribution and version
  hosts: tower
  tasks:
   - name: group hosts by linux distribution and version
     action: group_by key="{{ ansible_distribution }}-{{ ansible_distribution_major_version }}"

- name: install tower
  hosts: tower
  gather_facts: no
  become: true
  become_method: sudo
  roles:
    - awx_setup

- name: set downloaded backup archive location
  hosts: 'backup,restore'
  tags:
    - backup
    - restore
  tasks:
    - set_fact:
        local_backup_path: '{{ playbook_dir }}/files/tower-backup-latest.tar.gz'

- name: create backup archive
  hosts: backup
  tags: [backup]
  gather_facts: false
  tasks:
    - name: run backup command
      become: yes
      become_method: sudo
      environment:
        ANSIBLE_BECOME: 'True'
        ANSIBLE_BECOME_METHOD: sudo
        ANSIBLE_HOST_KEY_CHECKING: 'False'
      command: ./setup.sh -b
      args:
        chdir: /tmp/setup

    - name: download backup archive file
      fetch:
        flat: yes
        src: /tmp/setup/tower-backup-latest.tar.gz
        dest: '{{ local_backup_path }}'

- name: restore from backup
  hosts: restore
  tags: [restore]
  gather_facts: false
  tasks:
    - name: upload backup archive file
      copy:
        src: '{{ local_backup_path }}'
        dest: /tmp/tower-backup-latest.tar.gz

    - name: run restore command
      become: yes
      become_method: sudo
      environment:
        ANSIBLE_BECOME: 'True'
        ANSIBLE_BECOME_METHOD: sudo
        ANSIBLE_HOST_KEY_CHECKING: 'False'
      command: ./setup.sh -e "restore_backup_file=/tmp/tower-backup-latest.tar.gz" -r
      args:
        chdir: /tmp/setup
      notify: wait_for_tower

  handlers:
    - name: wait_for_tower
      uri:
          url: 'https://localhost/api/v1/ping/'
          validate_certs: no
          force_basic_auth: yes
      register: result
      until: result['status']|default(0) == 200
      delay: 2
      retries: 20
