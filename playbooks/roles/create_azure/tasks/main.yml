---
# TODO: Require either ssh_cert_path or password. Whichever is specified, only use it.

# - name: ensure keypair exists

- name: create/locate instance(s)
  azure:
    state: present
    name: "{{ azure_name_prefix }}-{{ item.storage_account }}-{{ item.name }}"
    location: '{{ item.location }}'
    storage_account: '{{ item.storage_account }}'
    image: '{{ item.image|default(azure_image) }}'
    role_size: '{{ item.role_size|default(azure_role_size) }}'
    user: '{{ item.user|default(azure_ssh_user) }}'
    management_cert_path: '{{ azure_management_cert_path }}'
    subscription_id: '{{ azure_subscription_id }}'
    #ssh_cert_path: '{{ azure_ssh_cert_path }}'
    password: '{{ item.password|default(azure_ssh_password) }}'
    endpoints: '{{ azure_endpoints }}'
    wait: yes
    wait_timeout: 1200
  with_items: '{{ azure_images }}'
  register: azure

# Despite using `wait` on the azure module, instances aren't accepting ssh
# connections immediately.  The following will ensure systems are ready for use
# before proceeding.
- name: wait for instances to listen on port:22
  wait_for:
    state=started
    host={{ item.public_dns_name }}
    port=22
    timeout=1200
  with_items: '{{ (azure|default({})).results|default([]) }}'
  when: azure_images and azure is defined

- name: add_host
  add_host:
    name: '{{ item.deployment.name }}'
    groups: 'cloud,azure,{{ item.deployment.name }}'
    ansible_user: '{{ item.user|default(azure_ssh_user) }}'
    ansible_host: '{{ item.public_dns_name }}'
    ansible_pass: '{{ item.password|default(azure_ssh_password) }}'
    #ansible_ssh_private_key_file: '{{ azure_ssh_cert_path }}'
  with_items: '{{ (azure|default({})).results|default([]) }}'
  when: azure_images and azure is defined

# HACK: While sshd may be listening, it may not fully accept connections
# immediately
- pause: seconds=30
  when: azure_images and azure is defined and azure.changed
