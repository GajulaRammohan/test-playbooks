---
# Download ansible-tower-setup and run the setup playbook

- name: remove any previously extracted tarball files
  file:
    path: '/tmp/setup'
    state: absent

- name: untar ansible-tower-setup
  unarchive:
    src: '{{aw_repo_url}}/{{awx_setup_path}}'
    dest: '/tmp/'
    remote_src: yes
    extra_opts:
      - --transform
      - s|^[^/]*|setup|

- name: is awx already installed?
  stat:
    path: /etc/tower/awx.cert
  register: is_awx_installed

- name: create sudoers config
  template:
    src: sudoers.j2
    dest: /etc/sudoers.d/tower-qa
    mode: '0640'
    owner: 'root'
    group: 'root'

- name: create inventory file
  template:
    src: inventory.j2
    dest: /tmp/setup/inventory
  when: not is_awx_installed.stat.exists or not awx_upgrade or not cluster_install

- name: create cluster inventory file
  template:
    src: inventory_cluster.j2
    dest: /tmp/setup/inventory
  when: cluster_install

- name: create vars.yml file
  template:
    src: vars.yml.j2
    dest: /tmp/setup/vars.yml
  when: not is_awx_installed.stat.exists or awx_upgrade

- name: create vars-static.yml file
  copy:
    src: vars-static.yml
    dest: /tmp/setup/vars-static.yml
  when: not is_awx_installed.stat.exists or awx_upgrade

- name: setup.sh
  command: ./setup.sh -e @vars.yml -e @vars-static.yml
  args:
      chdir: /tmp/setup
      # creates: /etc/tower/awx.cert
  environment:
    # To install with ansible < 1.9, sudo support is accessible by way of the following variable
    # ANSIBLE_SUDO: 'True'
    ANSIBLE_BECOME: 'True'
    ANSIBLE_BECOME_METHOD: 'sudo'
    ANSIBLE_HOST_KEY_CHECKING: 'False'
  when: not is_awx_installed.stat.exists or awx_upgrade

- name: verify Tower API is accepting connections
  uri:
      url: "{{'http' if disable_ssl else 'https'}}://localhost/api/v2/config/"
      validate_certs: false
      user: 'admin'
      password: '{{ admin_password }}'
      force_basic_auth: yes
  register: result
  until: result['status']|default(0) == 200
  retries: 6
  delay: 10
