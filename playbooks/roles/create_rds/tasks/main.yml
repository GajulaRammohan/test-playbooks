---
# Tasks to create rds instance(s)

- name: create/locate rds instance(s)
  rds:
    aws_access_key: '{{ aws_access_key }}'
    aws_secret_key: '{{ aws_secret_key }}'
    region: '{{ rds_region }}'
    command: create
    db_engine: '{{ item.db_engine }}'
    engine_version: '{{ item.engine_version }}'
    db_name: '{{ item.db_name }}'
    size: '{{ item.size }}'
    instance_type: '{{ item.instance_type }}'
    instance_name: '{{rds_name_prefix}}-{{item.name}}'
    port: '{{ rds_port }}'
    username: '{{ rds_username }}'
    password: '{{ rds_password }}'
    # security_groups: postgres
    wait: yes
    wait_timeout: 600
  with_items: '{{ rds_images }}'
  register: rds

- name: launch rds parameter group
  rds_param_group:
    state: present
    name: pbs-prod
    region: '{{ rds_region }}'
    description: prod param group
    engine: '{{ rds_db_engine }}{{ rds_engine_version }}'
    params:
      max_connections: 100
  when: rds_images and rds is defined

# Despite using `wait` on the rds module, instances aren't accepting ssh
# connections immediately.  The following will ensure systems are ready for use
# before proceeding.
- name: wait for instances to listen on port
  wait_for:
    timeout: 15
    state: started
    host: '{{ item.instance.endpoint }}'
    port: '{{ item.instance.port  }}'
  with_items: '{{ rds.results }}'
  when: rds_images and rds is defined

# define tower_db variable for potential use by roles/awx_install
- set_fact:
    tower_db:
        pg_database: '{{item.instance.username}}'
        pg_username: '{{rds_username}}'
        pg_password: '{{rds_password}}'
        pg_host: '{{item.instance.endpoint}}'
        pg_port: '{{rds_port}}'
  with_items: '{{ rds.results }}'
  when: rds_images and rds is defined

- name: add_host
  add_host:
    name: '# {{item.instance.id}}'
    groups: "rds,{{item.item.groups|default('')}}"
    postgres_username: '{{item.instance.username}}'
    postgres_password: '{{rds_password}}'
    postgres_host: '{{item.instance.endpoint}}'
    ansible_ssh_host: '{{item.instance.endpoint}}'
    ansible_ssh_user: '{{item.instance.username}}'
  with_items: '{{ rds.results }}'
  when: rds_images and rds is defined
