---

- name: Set python-cryptography package name (RHEL7)
  set_fact:
    python_cryptography: python-cryptography
  when: ansible_distribution_major_version == '7'

- name: Set python-cryptography package name (RHEL8)
  set_fact:
    python_cryptography: python3-cryptography
  when: ansible_distribution_major_version == '8'

- name: Ensure python-cryptography is installed
  become: true
  package:
    name: '{{ python_cryptography }}'

- set_fact:
    certificates_to_generate:
      - tower
      - pgsql

- set_fact:
    deployment_type: cluster
  when: "'database' in groups"

- set_fact:
    deployment_type: standalone
  when: "'database' not in groups"

- name: Generate private keys
  openssl_privatekey:
    path: '{{ tls_folder }}/{{ item }}.key'
  loop: '{{ certificates_to_generate }}'

- name: Generate CSRs standalone
  openssl_csr:
    path: '{{ tls_folder }}/{{ item }}.csr'
    privatekey_path: '{{ tls_folder }}/{{ item }}.key'
    common_name: localhost
    subject_alt_name: 'DNS:localhost'
    key_usage:
      - keyEncipherment
      - dataEncipherment
    extended_key_usage:
      - serverAuth
  loop: '{{ certificates_to_generate }}'
  when: deployment_type == 'standalone'

- name: Generate CSR cluster (tower)
  openssl_csr:
    path: '{{ tls_folder }}/tower.csr'
    privatekey_path: '{{ tls_folder }}/tower.key'
    common_name: '{{ ansible_hostname }}'
    subject_alt_name: "{{ groups['tower'] | map('regex_replace', '^', 'DNS:') | list | join(',')}}"
    key_usage:
      - keyEncipherment
      - dataEncipherment
    extended_key_usage:
      - serverAuth
  when: deployment_type == 'cluster'

- name: Generate CSRs cluster (pgsql)
  openssl_csr:
    path: '{{ tls_folder }}/pgsql.csr'
    privatekey_path: '{{ tls_folder }}/pgsql.key'
    subject_alt_name: "{{ groups['database'] | map('regex_replace', '^', 'DNS:') | list | join(',')}}"
  when: deployment_type == 'cluster'

- name: Generate CA key
  openssl_privatekey:
    path: '{{ tls_folder }}/root.key'

- name: Generate CA CSR
  openssl_csr:
    path: '{{ tls_folder }}/root.csr'
    privatekey_path: '{{ tls_folder }}/root.key'
    common_name: www.ansible.com
    organization_name: Ansible By Red Hat
    country_name: US
    basic_constraints: 'CA:TRUE'

- name: Generate CA certificate
  openssl_certificate:
    path: '{{ tls_folder }}/root.crt'
    csr_path: '{{ tls_folder }}/root.csr'
    privatekey_path: '{{ tls_folder }}/root.key'
    provider: selfsigned

- name: Generate certificates
  openssl_certificate:
    path: '{{ tls_folder }}/{{ item }}.crt'
    csr_path: '{{ tls_folder }}/{{ item }}.csr'
    privatekey_path: '{{ tls_folder }}/{{ item }}.key'
    provider: ownca
    ownca_path: '{{ tls_folder }}/root.crt'
    ownca_privatekey_path: '{{ tls_folder }}/root.key'
    ownca_not_after: '+824d'
  loop: '{{ certificates_to_generate }}'

- name: Cleanup CA CSR files
  file:
    path: '{{ tls_folder }}/root.csr'
    state: absent

- name: Cleanup CSR files
  file:
    path: '{{ tls_folder }}/{{ item }}.csr'
    state: absent
  loop: '{{ certificates_to_generate }}'
