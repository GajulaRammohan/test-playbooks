---
# Tasks to delete (optionally) and create rax instances

# - name: ensure security group exists
#   gce_net:

# - name: ensure keypair exists

- name: create/locate instance(s)
  gce:
    state: present
    name: '{{gce_name_prefix}}-{{item.name}}'
    machine_type: '{{item.machine_type}}'
    image: '{{item.image}}'
    zone: '{{item.zone}}'
    service_account_email: '{{ gce_service_account_email }}'
    pem_file: '{{ gce_pem_file }}'
    project_id: '{{ gce_project_id }}'
    # metadata: '{"db":"postgres", "group":"qa", "id":500}'
  with_items: gce_images
  register: gce

- debug: var=gce
  when: gce_images and gce is defined

# Despite using `wait` on the gce module, instances aren't accepting ssh
# connections immediately.  The following will ensure systems are ready for use
# before proceeding.
- name: wait for instances to listen on port:22
  wait_for:
    state=started
    host={{ item.instance_data[0].public_ip }}
    port=22
  with_items: gce.results
  when: gce_images and gce is defined

- name: add_host
  add_host: name={{ item.instance_data[0].public_ip }}
     groups=cloud,gce,{{ item.instance_data[0].name }}
     ansible_ssh_user={{ gce_ssh_user|default('root') }}
     ansible_ssh_host={{ item.instance_data[0].public_ip }}
     # ansible_ssh_private_key_file={{ gce_keypair_private }}
  with_items: gce.results
  when: gce_images and gce is defined

# HACK: While sshd may be listening, it may not fully accept connections
# immediately
- name: sleep 30s
  command: sleep 30s
  when: gce_images and gce is defined and gce.changed
