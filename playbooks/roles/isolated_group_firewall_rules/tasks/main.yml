---
# Make isolated nodes and managed hosts accessible by password auth
- name: Enable password auth in sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication no'
    line: 'PasswordAuthentication yes'
    state: present

- name: Set password for user
  user:
    name: "{{ ansible_user }}"
    password: "{{ admin_password|password_hash('sha512') }}"

- name: install firewalld (yum)
  yum:
    name: firewalld
    state: latest
    update_cache: yes
  when: ansible_pkg_mgr in ['yum', 'dnf']

- name: install firewalld (apt)
  apt:
    pkg: firewalld
    state: latest
    update_cache: yes
  when: ansible_pkg_mgr == 'apt'

- name: Restart sshd
  service:
    name: sshd
    enabled: yes
    state: restarted

# This is necessary on RHEL8 because starting the firewalld service returns too soon, and the hosts are not yet
# reachable because nftables is not ready yet.
- name: enable nftables on RHEL8
  service:
    name: nftables
    enabled: yes
    state: started
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'

- name: enable firewalld
  service:
    name: firewalld
    enabled: yes
    state: started

- block:
  - name: Add eth0 to public zone
    firewalld:
      interface: eth0
      zone: public
      state: enabled
      permanent: true
      immediate: true
    retries: 2 # also allow retries due to previously mentioned unreliablity of reachablity of hosts after firewalld startup
    delay: 3
    register: result
    until: result is success

  - name: On isolated_group_protected, enable ssh traffic from controller instances (private ip)
    firewalld:
      rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ansible_default_ipv4.address }}/32" port protocol="tcp" port="22" accept'
      zone: public
      state: enabled
      permanent: true
      immediate: true
    when: inventory_hostname in groups['isolated_group_protected']
    with_items: "{{ groups['instance_group_controller'] + groups['instance_group_future_controller'] }}"

  - name: On isolated_group_protected, enable ssh traffic from controller instances (public ip)
    firewalld:
      rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ipify_public_ip }}/32" port protocol="tcp" port="22" accept'
      zone: public
      state: enabled
      permanent: true
      immediate: true
    when: inventory_hostname in groups['isolated_group_protected']
    with_items: "{{ groups['instance_group_controller'] + groups['instance_group_future_controller'] }}"

  - name: On managed hosts, enable ssh traffic from isolated_group_protected (private ip)
    firewalld:
      rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ipify_public_ip }}/32" port protocol="tcp" port="22" accept'
      zone: public
      state: enabled
      permanent: true
      immediate: true
    when: inventory_hostname in groups['managed_hosts']
    with_items: "{{ groups['isolated_group_protected'] }}"

  - name: On managed hosts, enable ssh traffic from isolated_group_protected (public ip)
    firewalld:
      rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ansible_default_ipv4.address }}/32" port protocol="tcp" port="22" accept'
      zone: public
      state: enabled
      permanent: true
      immediate: true
    when: inventory_hostname in groups['managed_hosts']
    with_items: "{{ groups['isolated_group_protected'] }}"

  - name: Install at
    package:
      name: at

  - name: Start atd
    service:
      name: atd
      state: started

  # Using at so we don't get immediately kicked off
  - name: Remove general access to ssh from public zone
    shell: echo 'firewall-cmd --zone=public --remove-service=ssh --permanent && firewall-cmd --reload' | at now + 1 minute

  #FIXME: Not working on RHEL8 right now. Removing ssh from public zone shuts down all access, so rich rules are not working
  # this is implicit testing that in no other way work is delegated to isolated nodes, but there is no application need for
  # "isolated" nodes to be literally unavailable over the network from other sources than controllers
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version < '8'
