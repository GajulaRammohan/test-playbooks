---
# Make isolated nodes and managed hosts accessible by password auth
- name: Enable password auth in sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication no'
    line: 'PasswordAuthentication yes'
    state: present

- name: Set password for user
  user:
    name: "{{ ansible_user }}"
    password: "{{ admin_password|password_hash('sha512') }}"

- name: Restart sshd
  service:
    name: sshd
    state: restarted

- name: install firewalld (yum)
  yum:
    name: firewalld
    state: latest
    update_cache: yes
  when: ansible_pkg_mgr == 'yum'

- name: install firewalld (apt)
  apt:
    pkg: firewalld
    state: latest
    update_cache: yes
  when: ansible_pkg_mgr == 'apt'

- name: enable firewalld
  service:
    name: firewalld
    enabled: yes
    state: started

- name: Add eth0 to public zone
  firewalld:
    interface: eth0
    zone: public
    state: enabled
    permanent: true
    immediate: true

- name: On isolated_group_protected, enable ssh traffic from controller instances
  firewalld:
    rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ipify_public_ip }}/32" port protocol="tcp" port="22" accept'
    zone: public
    state: enabled
    permanent: true
    immediate: true
  when: inventory_hostname in groups['isolated_group_protected']
  with_items: "{{ groups['instance_group_controller'] + groups['instance_group_future_controller'] }}"

- name: On managed hosts, enable ssh traffic from isolated_group_protected
  firewalld:
    rich_rule: 'rule family="ipv4" source address="{{ hostvars[item].ipify_public_ip }}/32" port protocol="tcp" port="22" accept'
    zone: public
    state: enabled
    permanent: true
    immediate: true
  when: inventory_hostname in groups['managed_hosts']
  with_items: "{{ groups['isolated_group_protected'] }}"

- name: Remove general access to ssh from public zone
  firewalld:
    service: ssh
    state: disabled
    zone: public
    permanent: true
    immediate: true
