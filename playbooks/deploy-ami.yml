---
# This playbook deploys the AWX application (database, web and worker) to a
# multiple platforms across multiple cloud providers.

#
# Create remote hosts
#
- name: 'deploy cloud instances'
  hosts: local
  vars:
    ec2_region: us-east-1
    ec2_security_group: AWX
    ec2_key_name: jenkins
    ec2_public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    instance_name_prefix: ansible-tower
    ec2_images:
        - {'name': 'centos-6.5-x86_64',   'user': 'root',        'id': 'ami-eb6b0182', 'type': 'm3.large' }
        - {'name': 'rhel-6.5-x86_64',     'user': 'ec2-user',    'id': 'ami-63b6910a', 'type': 'm3.large' }
        #- {'name': 'rhel-7.0-x86_64',     'user': 'ec2-user',    'id': 'ami-785bae10', 'type': 'm3.large' }
        - {'name': 'ubuntu-12.04-x86_64', 'user': 'ubuntu',      'id': 'ami-5db4a934', 'type': 'm3.large' }
        - {'name': 'ubuntu-14.04-x86_64', 'user': 'ubuntu',      'id': 'ami-018c9568', 'type': 'm3.large' }

  roles:
    - role: create_ec2

- name: 'install ansible'
  hosts: ec2
  sudo: yes
  roles:
    - { role: packages }

- name: 'reset tower admin password (optional)'
  hosts: ec2
  sudo: yes
  vars:
    admin_password: fo0m4nchU
  tasks:
    - name: determine if awx is installed
      shell: tower-manage --help
      ignore_errors: true
      register: is_awx_installed

    - name: reset admin_password
      shell: echo "from django.contrib.auth.models import User; usr = User.objects.get(username='admin'); usr.set_password('{{ admin_password }}'); usr.save();" | tower-manage shell
      sudo_user: awx
      when: is_awx_installed|success

    - name: restart awx-celeryd
      supervisorctl: name=awx-celeryd state=restarted
      when: is_awx_installed|success

    - name: restart awx-callback-receiver
      supervisorctl: name=awx-callback-receiver state=restarted
      when: is_awx_installed|success

    - name: restart apache2
      service: name=apache2 state=restarted
      when: is_awx_installed|success

