- hosts: all
  tasks:
    - block:
        - name: Install virtualenv (EL-*)
          yum:
            name: python-virtualenv
            state: present
          when: ansible_pkg_mgr == 'yum'

        - name: Install virtualenv (Ubuntu-14)
          apt:
            name: python-virtualenv
            state: present
          when: ansible_pkg_mgr == 'apt' and ansible_distribution_major_version == '14'

        - name: Install virtualenv (Ubuntu - all other versions)
          apt:
            name: virtualenv
            state: present
          when: ansible_pkg_mgr == 'apt' and ansible_distribution_major_version != '14'

        - name: Create custom virtualenv
          command: virtualenv /var/lib/awx/venv/{{ venv_folder_name|default('custom-venv') }}

        - name: Print packages to install
          debug:
            msg: "Packages to install in venv: {{ venv_packages|default('python-memcached psutil (default packages)') }}"

        - name: Install gcc (required by psutil) (EL-*)
          yum:
            name: gcc
            state: present
          when: ansible_pkg_mgr == 'yum'

        - name: Pip install latest setuptools (Ubuntu)
          command: /var/lib/awx/venv/{{ venv_folder_name|default('custom-venv') }}/bin/pip install -I -U setuptools
          when: ansible_pkg_mgr == 'apt'

        - name: Install header files required by Ansible (Ubuntu)
          apt:
            name: "{{ packages }}"
            state: present
          vars:
            packages:
            - libssl-dev
            - libffi-dev
          when: ansible_pkg_mgr == 'apt'

        - name: Pip install required packages
          command: /var/lib/awx/venv/{{ venv_folder_name|default('custom-venv') }}/bin/pip install -I -U {{ venv_packages|default("python-memcached psutil") }}
          when: venv_packages != ''
      become: true
      when: not remove_virtualenv|default(false)

    - name: Remove custom virtualenv
      file:
        path: /var/lib/awx/venv/{{ venv_folder_name|default('custom-venv') }}
        state: absent
      become: true
      when: remove_virtualenv|default(false)
