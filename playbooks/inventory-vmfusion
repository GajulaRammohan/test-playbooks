#!/usr/bin/env python
import os
import sys
import subprocess
import re
import string
import json


VMRUN = os.getenv('VMRUN', '/Applications/VMware Fusion.app/Contents/Library/vmrun')


def usage():
    print "Usage: %s --list" % sys.argv[0]


def get_vm_ip(vmxfile):
    ''' Return the IP of a running VM '''
    try:
        ip = subprocess.check_output([VMRUN, 'getGuestIPAddress', vmxfile]).strip()
        return ip
    except Exception, error:
        return None


def get_running_vms():
    ''' List the running VMs '''
    output = subprocess.check_output( [VMRUN, "list"]).split('\n')

    vms = []

    for line in output:
        matcher = re.search("\.vmx$", line)
        if matcher:
            vms.append(matcher.string)

    return vms


if __name__ == "__main__":
    # TODO - transition to optparse
    if len(sys.argv) < 2:
        usage()
        sys.exit(1)

    if not os.path.exists:
        print("Unable to locate vmrun application")
        sys.exit(1)

    # initialize inventory
    inventory = dict(fusion=[])

    # gather VMs
    for vm in get_running_vms():
        inventory['fusion'].append(get_vm_ip(vm))

    # hostvars
    inventory['_meta'] = dict(hostvars={})
    for host in inventory.get('fusion', []):
        inventory['_meta']['hostvars'][host] = dict(ansible_ssh_user='root')

    print json.dumps(inventory)
